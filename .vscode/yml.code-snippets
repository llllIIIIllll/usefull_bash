{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
    "deploy" :{
        "prefix": "deploy_simple",
        "description": "Simple deploy template",
        "body": [
			"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    name: $1\n  name: $1\n  # namespace: gitlab\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      name: $1\n  template:\n    metadata:\n      labels:\n        name: $1\n    spec:\n      containers:\n        - image: $2\n          name: $1\n          ports:\n            - containerPort: 80\n            # hostPort: 80\n          volumeMounts:\n            - mountPath: \"\"\n              name: $3\n      volumes:\n        - name: $3\n          persistentVolumeClaim:\n            claimName: $3-pv-claim"		]
	},

    "ingress" :{
        "prefix": "ingress_simple",
        "description": "Simple ingress template",
        "body": [
			"apiVersion: extensions/v1beta1\nkind: Ingress\nmetadata:\n  name: $1\n  labels:\n    name: $1\n  # namespace: gitlab\nspec:\n  tls:\n  - hosts:\n    - $2\n    secretName: $1-secret\n  rules:\n  - host: $2\n    http:\n      paths:\n      - path: /\n        backend:\n          serviceName: $1\n          servicePort: $3"
		]
	},

    "pvc" :{
        "prefix": "pvc_simple",
        "description": "Simple pvc template",
        "body": [
			"apiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: $1-claim\n  # namespace: gitlab-runner\nspec:\n  storageClassName: $2\n  accessModes:\n    - ReadWriteOnce\n  resources:\n    requests:\n      storage: 3Gi"
		]
	},

    "pvp" :{
        "prefix": "it producton pv simple",
        "description": "it production template",
        "body": [
			"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: it-production-$1-$2\n  labels:\n    type: local\n    group: it\n    stage: production\n    target: $1\n    usage: $2\nspec:\n  storageClassName: $1-$2\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/home/PV/it/production/$1-$2\""		]
	},
	"pvt" :{
        "prefix": "it testing pv simple",
        "description": "it testing template",
        "body": [
			"apiVersion: v1\nkind: PersistentVolume\nmetadata:\n  name: it-testing-$1-$2\n  labels:\n    type: local\n    group: it\n    stage: testing\n    target: $1\n    usage: $2\nspec:\n  storageClassName: $1-$2\n  capacity:\n    storage: 10Gi\n  accessModes:\n    - ReadWriteOnce\n  hostPath:\n    path: \"/home/PV/it/testing/$1-$2\""		]
	},
}